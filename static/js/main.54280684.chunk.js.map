{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","important","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","AddItem","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","addItem","text","newItem","toConsumableArray","deleteItem","_ref2","idx","findIndex","el","slice","_ref3","toggleProperty","_ref4","arr","propertyName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCounter","todoCounter","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_add_item","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.54280684.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange =  (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"text\"\r\n             className=\"form-control search-input\"\r\n             placeholder=\"type to search\"\r\n             value = { this.state.term }\r\n             onChange = { this.onSearchChange } />\r\n    );\r\n  }\r\n};\r\n\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  state = {\r\n    done: false,\r\n    important: false\r\n  };\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone,\r\n            important, done} = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <span className = { classNames }>\r\n        <span\r\n          className = \"todo-list-item-label\"\r\n          onClick = { onToggleDone }>\r\n          {label}\r\n        </span>\r\n\r\n        <button type = \"button\"\r\n                className = \"btn btn-outline-success btn-sm float-right\"\r\n                onClick = { onToggleImportant }>\r\n          <i className = \"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type = \"button\"\r\n                className = \"btn btn-outline-danger btn-sm float-right\"\r\n                onClick = { onDeleted }>\r\n          <i className = \"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant,\r\n                    onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem \r\n          {...itemProps }\r\n          onDeleted = {() => onDeleted(id)}\r\n          onToggleImportant = {() => onToggleImportant(id)}\r\n          onToggleDone = {() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ];\r\n\r\n  render() {\r\n\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n        <button type=\"button\"\r\n                className={`btn ${clazz}`}\r\n                key={name}\r\n                onClick={() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className = \"btn-group\">\r\n        { buttons }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import AddItem from './add-item';\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport './add-item.css';\n\nexport default class AddItem extends Component {\n\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  };\n\n  render () {\n    return (\n      <form className = \"d-flex mt10\"\n            onSubmit = { this.onSubmit }>\n        <input type = \"text\"\n               className = \"form-control mr3\"\n               onChange = { this.onLabelChange }\n               placeholder = \"What needs to be done?\"\n               value = { this.state.label } />\n        <button type = \"button\"\n                className = \"btn btn-outline-info add-button\"\n                onClick = { this.onSubmit }>\n          Add ToDo\n        </button>\n      </form>\n    )\n  }\n}\n\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport AddItem from '../add-item';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData : [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch'),\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteItem = (id) => {\r\n    this.setState (({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propertyName) {\r\n\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem,\r\n      [propertyName]: !oldItem[propertyName]\r\n    };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState( ({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState( ({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n     this.setState({term})\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter})\r\n  };\r\n\r\n  search(items, term) {\r\n    if ( term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  };\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCounter = todoData.filter((el) => el.done).length;\r\n    const todoCounter = todoData.length - doneCounter;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCounter} done={doneCounter} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange = { this.onSearchChange } />\r\n          <ItemStatusFilter\r\n            filter = { filter }\r\n            onFilterChange = { this.onFilterChange } />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={ visibleItems }\r\n          onDeleted = { this.deleteItem }\r\n          onToggleImportant = { this.onToggleImportant }\r\n          onToggleDone = { this.onToggleDone }\r\n        />\r\n        <AddItem onItemAdded = { this.addItem }/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root')); "],"sourceRoot":""}